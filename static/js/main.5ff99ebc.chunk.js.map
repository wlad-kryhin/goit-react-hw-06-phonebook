{"version":3,"sources":["components/Filter/Filter.module.css","redux/action.jsx","redux/selectors.jsx","components/PhoneList/PhoneList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","redux/reducer.jsx","redux/store.jsx","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/PhoneList/PhoneList.module.css"],"names":["module","exports","addItem","createAction","name","tel","payload","id","uuidv4","deleteItem","changeFilter","getList","state","items","filter","normalizeFilter","toLocaleLowerCase","item","includes","getVisibleContacts","contacts","getFilterValue","PhoneList","dispatch","useDispatch","list","useSelector","className","s","map","text","number","button","type","onClick","action","onDelete","ContactForm","useState","setName","setTel","onSubmit","event","preventDefault","form","label","input","value","placeholder","onChange","currentTarget","pattern","required","Filter","e","target","App","createReducer","actions","find","contact","toLowerCase","alert","_","combineReducers","persistConfig","key","storage","blacklist","reducer","persistReducer","contactsReducer","store","configureStore","middleware","getDefaultMiddleware","concat","logger","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,8IC4BzC,GAAEC,QA3BDC,YAAa,aAAa,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,MAAoB,CAC5DC,QAAS,CACPC,GAAIC,cACJJ,OACAC,WAuBsBI,WApBPN,YAAa,gBAoBMO,aAnBjBP,YAAa,iBCHrBQ,EAAU,SAACC,GAAD,OAPI,SAACC,EAAOC,GACjC,IAAMC,EAAkBD,EAAOE,oBAE/B,OAAOH,EAAMC,QAAO,SAACG,GAAD,OAClBA,EAAKb,KAAKY,oBAAoBE,SAASH,MAIzCI,CAAmBP,EAAMQ,SAASP,MAAOD,EAAMQ,SAASN,SAC7CO,EAAiB,SAACT,GAAD,OAAWA,EAAMQ,SAASN,Q,OCJzC,SAASQ,IACtB,IAAMC,EAAWC,cACXC,EAAOC,YAAYf,GAEzB,OACE,oBAAIgB,UAAWC,IAAEH,KAAjB,SACGA,EAAKI,KAAI,YAAwB,IAArBtB,EAAoB,EAApBA,GAAIH,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACrB,OACE,+BACE,mBAAGsB,UAAWC,IAAEE,KAAhB,SAAuB1B,IACvB,mBAAGuB,UAAWC,IAAEG,OAAhB,SAAyB1B,IACzB,wBACEsB,UAAWC,IAAEI,OACbC,KAAK,SACLC,QAAS,kBAXJ,SAAC3B,GAAD,OAAQgB,EAASY,EAAO1B,WAAWF,IAWzB6B,CAAS7B,IAH1B,sBAHOA,Q,4BCPJ,SAAS8B,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOlC,EAAP,KAAamC,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAOjC,EAAP,KAAYmC,EAAZ,KACMjB,EAAWC,cAiBjB,OACE,uBAAMiB,SATiB,SAACC,GACxBA,EAAMC,iBACNpB,EAASY,EAAOjC,QAAQ,CAAEE,OAAMC,SAEhCkC,EAAQ,IACRC,EAAO,KAI2Bb,UAAWC,IAAEgB,KAA/C,UACE,wBAAOjB,UAAWC,IAAEiB,MAApB,iBAEE,uBACEZ,KAAK,OACL7B,KAAK,OACLuB,UAAWC,IAAEkB,MACbC,MAAO3C,EACP4C,YAAY,eACZC,SAzBsB,SAACP,GAC7BH,EAAQG,EAAMQ,cAAcH,QAyBtBI,QAAQ,yHACRC,UAAQ,OAGZ,wBAAOzB,UAAWC,IAAEiB,MAApB,gBAEE,uBACEZ,KAAK,MACL7B,KAAK,MACLuB,UAAWC,IAAEkB,MACbE,YAAY,aACZC,SAlCqB,SAACP,GAC5BF,EAAOE,EAAMQ,cAAcH,QAkCrBA,MAAO1C,EACP8C,QAAQ,yFACRC,UAAQ,OAGZ,wBAAQnB,KAAK,SAASN,UAAWC,IAAEI,OAAnC,4B,qBCjDS,SAASqB,IACtB,IAAMN,EAAQrB,YAAYL,GACpBE,EAAWC,cACjB,OACE,wBAAOG,UAAWC,IAAEiB,MAApB,kCAEE,uBACElB,UAAWC,IAAEkB,MACbb,KAAK,OACLc,MAAOA,EACPE,SAAU,SAACK,GAAD,OAAO/B,EAASY,EAAOzB,aAAa4C,EAAEC,OAAOR,SACvDC,YAAY,uBCCLQ,I,EAAAA,EAZf,WACE,OACE,sBAAK7B,UAAU,YAAf,UACE,4CACA,cAACU,EAAD,IACA,0CACA,cAACgB,EAAD,IAEA,cAAC/B,EAAD,Q,uBCVAT,EAAQ4C,YAAc,IAAD,mBACxBC,EAAQxD,SAAU,SAACU,EAAD,GAAyB,IAAfN,EAAc,EAAdA,QAC3B,GACEM,EAAM+C,MACJ,SAACC,GAAD,OAAaA,EAAQxD,KAAKyD,gBAAkBvD,EAAQF,KAAKyD,iBAG3DC,MAAM,GAAD,OAAIxD,EAAQF,KAAZ,iCACA,KAAIQ,EAAM+C,MAAK,SAACC,GAAD,OAAaA,EAAQvD,MAAQC,EAAQD,OAGzD,MAAM,GAAN,mBAAWO,GAAX,CAAkBN,IAFlBwD,MAAM,GAAD,OAAIxD,EAAQD,IAAZ,iCATgB,cAcxBqD,EAAQjD,YAAa,SAACG,EAAD,OAAUN,EAAV,EAAUA,QAAV,OACpBM,EAAME,QAAO,SAACG,GAAD,OAAUA,EAAKV,KAAOD,QAfZ,IAkBrBQ,EAAS2C,YAAc,GAAD,eACzBC,EAAQhD,cAAe,SAACqD,EAAD,YAAMzD,YAiCjB0D,cAAgB,CAC7BnD,QACAC,W,0CCpDImD,EAAgB,CACpBC,IAAK,QACLC,YACAC,UAAW,CAAC,WAGRC,EAAU,CACdjD,SAFuBkD,YAAeL,EAAeM,IAKjDC,EAAQC,YAAe,CAC3BJ,UACAK,WAAY,SAACC,GAAD,OAA0BA,IAAuBC,OAAOC,MACpEC,UAAUC,IAIG,GAAEP,QAAOQ,UADNC,YAAaT,I,QCThBU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrB,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAasB,QAAS,KAAMd,UAAWR,EAAMQ,UAA7C,SACE,cAAC,EAAD,UAINe,SAASC,eAAe,SAM1Bd,K,kBCtBAlF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,kBCAlID,EAAOC,QAAU,CAAC,KAAO,wBAAwB,OAAS,0BAA0B,KAAO,wBAAwB,OAAS,6B","file":"static/js/main.5ff99ebc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2cLMG\",\"label\":\"Filter_label__2B1XK\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nconst addItem = createAction(\"items/add\", ({ name, tel }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    tel,\r\n  },\r\n}));\r\nconst deleteItem = createAction(\"items/delete\");\r\nconst changeFilter = createAction(\"items/filter\");\r\n// const addItem = ({ name, tel }) => ({\r\n//   type: actionTypes.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     tel,\r\n//   },\r\n// });\r\n\r\n// const deleteItem = (id) => ({\r\n//   type: actionTypes.DELETE,\r\n//   payload: id,\r\n// });\r\n\r\n// const changeFilter = (value) => ({\r\n//   type: actionTypes.FILTER,\r\n//   payload: value,\r\n// });\r\nexport default { addItem, deleteItem, changeFilter };\r\n","const getVisibleContacts = (items, filter) => {\r\n  const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n  return items.filter((item) =>\r\n    item.name.toLocaleLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\nexport const getList = (state) =>\r\n  getVisibleContacts(state.contacts.items, state.contacts.filter);\r\nexport const getFilterValue = (state) => state.contacts.filter;\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./PhoneList.module.css\";\r\nimport action from \"../../redux/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getList } from \"../../redux/selectors\";\r\nexport default function PhoneList() {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector(getList);\r\n  const onDelete = (id) => dispatch(action.deleteItem(id));\r\n  return (\r\n    <ul className={s.list}>\r\n      {list.map(({ id, name, tel }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p className={s.text}>{name}</p>\r\n            <p className={s.number}>{tel}</p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n// PhoneList.propTypes = {\r\n//   list: PropTypes.array,\r\n//   onDelete: PropTypes.func,\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, items } = state.contacts;\r\n//   // const { tel, name } = list;\r\n//   // if (\r\n//   //   items.find((contact) => contact.name.toLowerCase() === name.toLowerCase())\r\n//   // ) {\r\n//   //   alert(`${name} is already in contacts.`);\r\n//   // }\r\n//   // if (items.find((contact) => contact.tel === tel)) {\r\n//   //   alert(`${tel} is already in contacts.`);\r\n//   // }\r\n//   const visibleItems = getVisibleContacts(items, filter);\r\n\r\n//   return {\r\n//     list: visibleItems,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDelete: (id) => dispatch(action.deleteItem(id)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(PhoneList);\r\n","import { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport action from \"../../redux/action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputNameChange = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const handleInputTelChange = (event) => {\r\n    setTel(event.currentTarget.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(action.addItem({ name, tel }));\r\n    // event.target.reset();\r\n    setName(\"\");\r\n    setTel(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          onChange={handleInputNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Tel\r\n        <input\r\n          type=\"tel\"\r\n          name=\"tel\"\r\n          className={s.input}\r\n          placeholder=\"774-333-22\"\r\n          onChange={handleInputTelChange}\r\n          value={tel}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func,\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   submit: ({ name, tel }) => dispatch(action.addItem({ name, tel })),\r\n// });\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport action from \"../../redux/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterValue } from \"../../redux/selectors\";\r\nexport default function Filter() {\r\n  const value = useSelector(getFilterValue);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(action.changeFilter(e.target.value))}\r\n        placeholder=\"Find contact...\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string,\r\n//   onChange: PropTypes.func,\r\n// };\r\n// const mapStateToProps = (state) => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   change: (e) => dispatch(action.changeFilter(e.target.value)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./index.css\";\nimport PhoneList from \"./components/PhoneList/PhoneList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>PhoneBooks</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n\n      <PhoneList />\n    </div>\n  );\n}\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./action\";\r\nconst items = createReducer([], {\r\n  [actions.addItem]: (state, { payload }) => {\r\n    if (\r\n      state.find(\r\n        (contact) => contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${payload.name} is already in contacts.`);\r\n    } else if (state.find((contact) => contact.tel === payload.tel)) {\r\n      alert(`${payload.tel} is already in contacts.`);\r\n    } else {\r\n      return [...state, payload];\r\n    }\r\n  },\r\n  [actions.deleteItem]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD:\r\n//       if (\r\n//         state.find(\r\n//           (contact) =>\r\n//             contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n//         )\r\n//       ) {\r\n//         alert(`${payload.name} is already in contacts.`);\r\n//       }\r\n//       if (state.find((contact) => contact.tel === payload.tel)) {\r\n//         alert(`${payload.tel} is already in contacts.`);\r\n//       }\r\n//       return [...state, payload];\r\n\r\n//     case actionTypes.DELETE:\r\n//       return state.filter((item) => item.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import contactsReducer from \"./reducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nconst persistConfig = {\r\n  key: \"items\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, contactsReducer);\r\nconst reducer = {\r\n  contacts: persistedReducer,\r\n};\r\n// const store = createStore(reducer, composeWithDevTools());\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3PzBj\",\"label\":\"ContactForm_label__6IUo-\",\"input\":\"ContactForm_input__3zBRC\",\"button\":\"ContactForm_button__PJV_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneList_list__7yqZf\",\"button\":\"PhoneList_button__3Lj-H\",\"text\":\"PhoneList_text__1dMM8\",\"number\":\"PhoneList_number__15OKH\"};"],"sourceRoot":""}