{"version":3,"sources":["components/Filter/Filter.module.css","redux/actionTypes.jsx","redux/action.jsx","components/PhoneList/PhoneList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","redux/reducer.jsx","redux/store.jsx","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/PhoneList/PhoneList.module.css"],"names":["module","exports","name","tel","type","actionTypes","payload","id","uuidv4","value","connect","state","contacts","filter","visibleItems","items","normalizeFilter","toLocaleLowerCase","item","includes","getVisibleContacts","list","dispatch","onDelete","action","className","s","map","text","number","button","onClick","submit","useState","setName","setTel","onSubmit","event","preventDefault","form","label","input","placeholder","onChange","currentTarget","pattern","required","change","e","target","App","combineReducers","find","contact","toLowerCase","alert","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","contactsReducer","reducer","store","createStore","composeWithDevTools","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0db11cbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2cLMG\",\"label\":\"Filter_label__2B1XK\"};","export default {\r\n  ADD: \"item/add\",\r\n  DELETE: \"item/delete\",\r\n  FILTER: \"item/filter\",\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport actionTypes from \"./actionTypes\";\r\nconst addItem = ({ name, tel }) => ({\r\n  type: actionTypes.ADD,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    tel,\r\n  },\r\n});\r\nconst deleteItem = (id) => ({\r\n  type: actionTypes.DELETE,\r\n  payload: id,\r\n});\r\nconst changeFilter = (value) => ({\r\n  type: actionTypes.FILTER,\r\n  payload: value,\r\n});\r\nexport default { addItem, deleteItem, changeFilter };\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./PhoneList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport action from \"../../redux/action\";\r\n\r\nfunction PhoneList({ list, onDelete }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {list.map(({ id, name, tel }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p className={s.text}>{name}</p>\r\n            <p className={s.number}>{tel}</p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nPhoneList.propTypes = {\r\n  list: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\nconst getVisibleContacts = (items, filter) => {\r\n  const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n  return items.filter((item) =>\r\n    item.name.toLocaleLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { filter, items } = state.contacts;\r\n  // const { tel, name } = list;\r\n  // if (\r\n  //   items.find((contact) => contact.name.toLowerCase() === name.toLowerCase())\r\n  // ) {\r\n  //   alert(`${name} is already in contacts.`);\r\n  // }\r\n  // if (items.find((contact) => contact.tel === tel)) {\r\n  //   alert(`${tel} is already in contacts.`);\r\n  // }\r\n  const visibleItems = getVisibleContacts(items, filter);\r\n\r\n  return {\r\n    list: visibleItems,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(action.deleteItem(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneList);\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport action from \"../../redux/action\";\r\n\r\nfunction ContactForm({ submit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n\r\n  const handleInputNameChange = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const handleInputTelChange = (event) => {\r\n    setTel(event.currentTarget.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    submit({ name, tel });\r\n    // event.target.reset();\r\n    setName(\"\");\r\n    setTel(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          onChange={handleInputNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Tel\r\n        <input\r\n          type=\"tel\"\r\n          name=\"tel\"\r\n          className={s.input}\r\n          placeholder=\"774-333-22\"\r\n          onChange={handleInputTelChange}\r\n          value={tel}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  submit: ({ name, tel }) => dispatch(action.addItem({ name, tel })),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport action from \"../../redux/action\";\r\nfunction Filter({ value, change }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={change}\r\n        placeholder=\"Find contact...\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  change: (e) => dispatch(action.changeFilter(e.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./index.css\";\nimport PhoneList from \"./components/PhoneList/PhoneList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>PhoneBooks</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n\n      <PhoneList />\n    </div>\n  );\n}\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport actionTypes from \"./actionTypes\";\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      if (\r\n        state.find(\r\n          (contact) =>\r\n            contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n        )\r\n      ) {\r\n        alert(`${payload.name} is already in contacts.`);\r\n      }\r\n      if (state.find((contact) => contact.tel === payload.tel)) {\r\n        alert(`${payload.tel} is already in contacts.`);\r\n      }\r\n      return [...state, payload];\r\n\r\n    case actionTypes.DELETE:\r\n      return state.filter((item) => item.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./reducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nconst persistConfig = {\r\n  key: \"items\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, contactsReducer);\r\nconst reducer = combineReducers({\r\n  contacts: persistedReducer,\r\n});\r\nconst store = createStore(reducer, composeWithDevTools());\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3PzBj\",\"label\":\"ContactForm_label__6IUo-\",\"input\":\"ContactForm_input__3zBRC\",\"button\":\"ContactForm_button__PJV_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneList_list__7yqZf\",\"button\":\"PhoneList_button__3Lj-H\",\"text\":\"PhoneList_text__1dMM8\",\"number\":\"PhoneList_number__15OKH\"};"],"sourceRoot":""}